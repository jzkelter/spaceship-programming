{"spaces":[{"id":0,"spaceId":"ntb-defs-0","name":"Block Space 0","width":800,"height":1000,"defs":{"version":7,"height":1000,"width":800,"blocks":[{"id":0,"action":"schedule-engines","isRequired":true,"placement":"starter","type":null,"format":"to schedule-engines","isTerminal":false,"closeClauses":null,"closeStarter":null,"limit":1,"note":null,"blockColor":null,"textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"none-of","tags":["engines"]},"tags":[],"clauses":[],"params":[],"properties":[],"name":"ntb-block-updated"},{"id":1,"action":"for duration","isRequired":false,"placement":"child","type":null,"format":"set duration {0}\nset last-tick-scheduled ifelse-value empty? schedule [ticks] [last (first (last schedule))]\nset ticks-on (list last-tick-scheduled (last-tick-scheduled + duration))\nset schedule lput (list ticks-on [0 0 0 0]) schedule ","isTerminal":false,"closeClauses":null,"closeStarter":null,"limit":0,"note":null,"blockColor":"#bbccee","textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"unrestricted"},"tags":[],"clauses":[{"action":null,"open":"\t\t\t","close":null,"allowedTags":{"type":"any-of","tags":["engines"]},"blocks":[]}],"params":[{"name":"duration","unit":" s","step":1,"random":false,"default":1,"type":"range","min":0,"max":20,"value":1,"def":1}],"properties":[]},{"id":4,"action":"turn top engine on ","isRequired":false,"placement":"child","type":null,"format":"set new-times first last schedule\nset new-forces last last schedule\nset new-forces replace-item 0 new-forces {0}\nset schedule lput (list new-times new-forces) (but-last schedule)","isTerminal":false,"closeClauses":null,"closeStarter":null,"limit":0,"note":null,"blockColor":null,"textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"unrestricted"},"tags":["engines"],"clauses":[],"params":[{"name":"force","unit":"N","step":0.1,"random":false,"default":1,"type":"range","min":0,"max":10,"value":1}],"properties":[]},{"id":5,"action":"turn right engine on ","isRequired":false,"placement":"child","type":null,"format":"set new-times first last schedule\nset new-forces last last schedule\nset new-forces replace-item 1 new-forces {0}\nset schedule lput (list new-times new-forces) (but-last schedule)","isTerminal":false,"closeClauses":null,"closeStarter":null,"limit":0,"note":null,"blockColor":null,"textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"unrestricted"},"tags":["engines"],"clauses":[],"params":[{"name":"force","unit":"N","step":0.1,"random":false,"default":1,"type":"range","min":0,"max":10,"value":1}],"properties":[]},{"id":3,"action":"turn bottom engine on ","isRequired":false,"placement":"child","type":null,"format":"set new-times first last schedule\nset new-forces last last schedule\nset new-forces replace-item 2 new-forces {0}\nset schedule lput (list new-times new-forces) (but-last schedule)","isTerminal":false,"closeClauses":null,"closeStarter":null,"limit":0,"note":null,"blockColor":null,"textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"unrestricted"},"tags":["engines"],"clauses":[],"params":[{"name":"force","unit":"N","step":0.1,"random":false,"default":1,"type":"range","min":0,"max":10,"value":1,"def":1}],"properties":[]},{"id":6,"action":"turn left engine on","isRequired":false,"placement":"child","type":null,"format":"set new-times first last schedule\nset new-forces last last schedule\nset new-forces replace-item 3 new-forces {0}\nset schedule lput (list new-times new-forces) (but-last schedule)","isTerminal":false,"closeClauses":null,"closeStarter":null,"limit":0,"note":null,"blockColor":null,"textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"unrestricted"},"tags":["engines"],"clauses":[],"params":[{"name":"force","unit":"N","step":0.1,"random":false,"default":1,"type":"range","min":0,"max":10,"value":1}],"properties":[]},{"id":7,"action":"wait for","isRequired":false,"placement":"child","type":null,"format":"set duration {0}\nset last-tick-scheduled ifelse-value empty? schedule [ticks] [last (first (last schedule))]\nset ticks-on (list last-tick-scheduled (last-tick-scheduled + duration))\nset schedule lput (list ticks-on []) schedule ","isTerminal":false,"closeClauses":null,"closeStarter":null,"limit":0,"note":null,"blockColor":"#bbccee","textColor":null,"borderColor":null,"font":null,"allowedTags":{"type":"unrestricted"},"tags":[],"clauses":[],"params":[{"name":"duration","unit":"s","step":1,"random":false,"default":10,"type":"int","value":10}],"properties":[]}],"menuConfig":{"mainGroup":{"isCollapsed":false,"order":[0,1,4,5,3,6,7]},"tagGroups":[]},"program":{"chains":[{"x":72.90576171875,"y":44.6502685546875,"blocks":[{"definitionId":0,"instanceId":0,"clauses":[],"params":[],"properties":[],"propertiesDisplay":"shown"},{"definitionId":1,"instanceId":0,"clauses":[{"blocks":[]}],"params":[{"type":"range","value":1}],"properties":[],"propertiesDisplay":"shown"}]}]},"chainOpen":null,"chainClose":"end","variables":[{"name":"force","tags":["engines"]},{"name":"draw-path?","tags":[]},{"name":"maze","tags":[]},{"name":"dt","tags":[]},{"name":"dynaturtle","tags":[]},{"name":"schedule","tags":[]},{"name":"message","tags":[]},{"name":"ruler","tags":[]},{"name":"ruler-label","tags":[]},{"name":"duration","tags":[]},{"name":"last-tick-scheduled","tags":[]},{"name":"ticks-on","tags":[]},{"name":"new-times","tags":[]},{"name":"new-forces","tags":[]},{"name":"pxcor","tags":["patches","turtles"]},{"name":"plabel-color","tags":["patches","turtles"]},{"name":"pcolor","tags":["patches","turtles"]},{"name":"pycor","tags":["patches","turtles"]},{"name":"mass","tags":["turtles","engines"]},{"name":"who","tags":["turtles","engines"]},{"name":"ycor","tags":["turtles","engines"]},{"name":"xcor","tags":["turtles","engines"]},{"name":"size","tags":["turtles","engines"]},{"name":"label-color","tags":["turtles","engines"]},{"name":"vx","tags":["turtles","engines"]},{"name":"pen-size","tags":["turtles","engines"]},{"name":"color","tags":["turtles","engines"]},{"name":"hidden?","tags":["turtles","engines"]},{"name":"heading","tags":["turtles","engines"]},{"name":"vy","tags":["turtles","engines"]},{"name":"pen-mode","tags":["turtles","engines"]},{"name":"label-color","tags":["links"]},{"name":"thickness","tags":["links"]},{"name":"color","tags":["links"]},{"name":"hidden?","tags":["links"]}],"expressions":[]},"netLogoCode":"to schedule-engines\n  set duration 1\n  set last-tick-scheduled ifelse-value empty? schedule [ticks] [last (first (last schedule))]\n  set ticks-on (list last-tick-scheduled (last-tick-scheduled + duration))\n  set schedule lput (list ticks-on [0 0 0 0]) schedule \nend","netLogoDisplay":"to schedule-engines\n  set duration 1\n  set last-tick-scheduled ifelse-value empty? schedule [ticks] [last (first (last schedule))]\n  set ticks-on (list last-tick-scheduled (last-tick-scheduled + duration))\n  set schedule lput (list ticks-on [0 0 0 0]) schedule \nend"}],"netTangoOptions":{"workspaceBelow":true,"showCode":true,"enablePlayModeDefinitionChanges":false,"enableCodeTips":true},"netLogoOptions":{"commandCenterTab":true,"codeTab":true,"infoTab":true,"speedBar":false,"fileButtons":true,"authoring":true,"poweredBy":false},"blockStyles":null,"title":"spaceship programming","extraCss":"","code":"breed [engines engine]\nturtles-own [Vx Vy mass]\nengines-own [force]\nglobals [\n  dt\n  dynaturtle\n  schedule\n  message\n  ruler\n  ruler-label\n  ; the following are needed for the block-based schedule-engine procedure\n  DURATION\n  LAST-TICK-SCHEDULED\n  TICKS-ON\n  NEW-TIMES\n  NEW-FORCES\n]\n\n\n\nto setup\n  ca\n  set schedule []\n  foreach (list 0 90 180 270) [h ->\n    create-engines 1 [\n      set color orange\n      set heading h\n      hide-turtle\n      set shape \"fire\"\n    ]\n  ]\n\n  crt 1 [\n    set color blue\n    set dynaturtle self\n    set shape \"square\"\n    set mass 10\n    create-links-with engines [\n      set color orange\n      set thickness .4\n      hide-link\n    ]\n  ]\n\n  crt 1 [\n    set message self\n    set size 0\n  ]\n\n  crt 1 [\n    set ruler self\n    create-link-with dynaturtle [hide-link]\n    hide-turtle\n    set shape \"line\"\n    set color grey\n    set size 2\n    set heading 0\n  ]\n\n  crt 1 [\n    set ruler-label self\n    set size 0\n  ]\n\n  set dt 1 ;; This is the time step which gets related to ticks (e.g. if it seconds, then 1 sec = 1 tick, if you sent it to 0.5, the 0.5 seconds=1 tick)\n\n  (ifelse\n    maze = \"none diagonal\" [setup-no-maze]\n    maze = \"none horizontal\" [setup-no-maze-horizontal]\n    maze = \"maze 1\" [setup-maze-1]\n    maze = \"maze 2\" [setup-maze-2]\n    maze = \"random target 1D\" [setup-random-target \"1D\"]\n    maze = \"random target 2D\" [setup-random-target \"2D\"]\n  )\n\n  reset-ticks\n\nend\n\nto setup-random-target [D]\n  ask dynaturtle [\n    let x ifelse-value random-float 1 < 0.5 [min-pxcor + 1] [max-pxcor - 1]\n    setxy x round random-ycor\n  ]\n\n  crt 1 [\n    (ifelse\n      D = \"1D\" [pick-random-spot-1d]\n      D = \"2D\" [pick-random-spot-2d]\n    )\n    ask patches in-radius 1.5 [set pcolor green]\n    die\n  ]\n\nend\n\nto pick-random-spot-1d\n  setxy round random-xcor [ycor] of dynaturtle\n  if distance dynaturtle < 5 [\n    pick-random-spot-1d\n  ]\nend\n\nto pick-random-spot-2d\n  setxy round random-xcor round random-ycor\n  if distance dynaturtle < 5 [\n    pick-random-spot-2d\n  ]\nend\n\nto setup-no-maze-horizontal\n  let y min-pycor + 7.5\n  ask dynaturtle [\n    setxy min-pxcor + 7 y\n  ]\n\n  crt 1 [\n    setxy (min-pxcor + 8 + world-width / 2) y\n    ask patches in-radius 1.5 [set pcolor green]\n    die\n  ]\nend\n\n\nto setup-no-maze\n  ask dynaturtle [\n    setxy min-pxcor + 7 min-pycor + 7\n  ]\n\n  crt 1 [\n    setxy (min-pxcor + 7 + world-width / 2) (min-pycor + 7 + world-height / 2)\n    ask patches in-radius 1.5 [set pcolor green]\n    die\n  ]\n\nend\n\n\nto setup-maze-1\n\n  crt 1 [\n    setxy min-pxcor + 7 min-pycor + 7\n    set heading 90\n    repeat 2 [\n      repeat world-width / 2 [\n        ask patches in-radius 1.5 [\n          set pcolor red\n        ]\n        fd 1\n      ]\n      lt 90\n    ]\n    ask patches in-radius 1.5 [set pcolor green]\n    die\n  ]\n  ask patches with [pcolor = black and any? neighbors4 with [pcolor = red]] [\n    set pcolor grey\n  ]\n  ask patches with [pcolor = red] [set pcolor black]\n\n  ask dynaturtle [\n    setxy min-pxcor + 7 min-pycor + 7\n  ]\nend\n\nto setup-maze-2\n  let x-start min-pxcor + 6\n  let y-start min-pxcor + 3\n  crt 1 [\n    setxy x-start y-start\n\n    set heading 0\n    repeat world-height / 3 [\n      ask patches in-radius 2 [\n        set pcolor red\n      ]\n      fd 1\n    ]\n\n    set heading 45\n    repeat world-height / 3 [\n      ask patches in-radius 2.5 [\n        set pcolor red\n      ]\n      fd 1\n    ]\n\n    set heading 90\n    repeat world-height / 3 [\n      ask patches in-radius 2 [\n        set pcolor red\n      ]\n      fd 1\n    ]\n\n    ask patches in-radius 1.75 [set pcolor green]\n    die\n  ]\n\n  ask patches with [pcolor = black and any? neighbors4 with [pcolor = red]] [\n    set pcolor grey\n  ]\n  ask patches with [pcolor = red] [set pcolor black]\n  ;ask patches with [pcolor = grey and pycor < y-start] [set pcolor black]\n\n  ask dynaturtle [\n    setxy x-start y-start\n  ]\nend\n\n\n\n\n\nto go\n  if ticks = 0 [\n    schedule-engines\n    log-data\n  ]\n  update-schedule\n\n  run-engines\n\n  if flew-away? [\n    show-final-message \"You flew away!\"\n    stop\n  ]\n\n  if crashed? [\n    print \"crashed\"\n    stop\n  ]\n\n  ask dynaturtle [\n    set-pen-position\n    setxy (xcor + Vx * dt) (ycor + Vy * dt)\n  ]\n\n  ask engines [\n    visualize\n  ]\n\n\n\n  if reached-goal? [\n    stop\n    print \"reached goal\"\n  ]\n\n  tick\nend\n\nto show-ruler\n\n  ask ruler [\n    ifelse mouse-inside? [\n\n      setxy mouse-xcor mouse-ycor\n      show-turtle\n      face dynaturtle\n      rt 90\n      ask my-links [show-link]\n      ask ruler-label [\n        move-to myself\n        face dynaturtle\n        fd distance dynaturtle / 2\n        set label (word [precision distance dynaturtle 1] of myself \" \")\n      ]\n\n    ] [\n      hide-turtle\n      ask my-links [hide-link]\n      ask ruler-label [set label \"\"]\n    ]\n  ]\n\n\n  display\nend\n\n\n\nto show-final-message [the-message]\n  ask message [\n    move-to dynaturtle\n\n    ;;;set ycor ycor - 2\n    ;set xcor xcor + 2\n    if xcor < (min-pxcor + 5) [set xcor xcor + 5]\n    if pycor = max-pycor [set ycor ycor - 1]\n    ;if ycor < (min-pycor + 5) [set ycor ycor + 1]\n\n    set label the-message\n  ]\nend\n\nto-report flew-away?\n  let will-fly-away? false\n\n  ask dynaturtle [\n    let new-x [xcor + Vx * dt] of dynaturtle\n    let new-y [ycor + Vy * dt] of dynaturtle\n    set will-fly-away? (\n      new-x >= max-pxcor\n      or new-x <= min-pycor\n      or new-y >= max-pycor\n      or new-y <= min-pycor\n    )\n    if will-fly-away?   [hide-turtle]\n    ask engines [\n      hide-turtle\n      ask my-links [hide-link]\n    ]\n  ]\n  report will-fly-away?\n\nend\n\nto-report crashed?\n  let will-crash? false\n  ask dynaturtle [\n    if dyna-direction != \"not moving\" [\n      set heading dyna-direction\n      set will-crash? member? true map [d -> [pcolor = grey] of patch-ahead d] (range 0.5 (speed + .5) .1)\n\n      if will-crash? [\n        while [[pcolor != grey] of patch-here] [\n          fd .1\n        ]\n        set shape \"fire\"\n        set color red\n        set heading 0\n        set size 2\n\n        ask engines [\n          visualize\n        ]\n        show-final-message \"you crashed!\"\n      ]\n    ]\n  ]\n  report will-crash?\nend\n\nto-report reached-goal?\n  let reached? false\n  if [speed = 0 and [pcolor] of patch-here = green] of dynaturtle and empty? schedule [\n    set reached? true\n    show-final-message \"you made it!\"\n\n  ]\n  report reached?\nend\n\n\nto run-engines\n\n  ask engines [set force 0]\n\n  ; first condition checks there is anything left in schedule. Second condition checks that it isn't a wait block\n  if (not empty? schedule) and (not empty? last first schedule) [\n    let engine-forces last first schedule\n    ask engine 0 [set force item 0 engine-forces]\n    ask engine 1 [set force item 1 engine-forces]\n    ask engine 2 [set force item 2 engine-forces]\n    ask engine 3 [set force item 3 engine-forces]\n\n\n    ask engine 0  [\n      if force > 0 [\n        accelerate-y (- force)\n      ]\n    ]\n\n    ask engine 1  [\n      if force > 0 [\n        accelerate-x (- force)\n      ]\n    ]\n\n    ask engine 2  [\n      if force > 0 [\n        accelerate-y force\n      ]\n    ]\n\n    ask engine 3  [\n      if force > 0 [\n        accelerate-x force\n      ]\n    ]\n\n  ]\nend\n\nto visualize\n  ifelse force > 0 [\n    visualize-on\n  ] [\n    visualize-off\n  ]\n\nend\n\n\n\nto visualize-off\n  hide-turtle\n  ask my-links [hide-link]\nend\n\nto visualize-on\n  move-to dynaturtle\n  fd .5 + force / 5\n  ask my-links [show-link]\n  show-turtle\nend\n\n\nto accelerate-x [fx]\n  ask dynaturtle [\n    set Vx precision (Vx + (fx / mass) * dt) 5\n  ]\nend\n\nto accelerate-y [fy]\n  ask dynaturtle [\n    set Vy precision (Vy + (fy / mass) * dt) 5\n  ]\nend\n\n\n\nto set-pen-position\n  ifelse draw-path? [\n    pen-down\n    set size .2\n    stamp\n    set size 1\n  ] [\n    pen-up\n  ]\nend\n\nto-report dyna-direction\n  let v-x [vx] of dynaturtle\n  let v-y [vy] of dynaturtle\n  ifelse precision (abs v-x + abs v-y) 5 = 0 [\n    report \"not moving\"\n  ] [\n    report atan v-x v-y\n  ]\nend\n\nto update-schedule\n  if not empty? schedule and first-schedule-time-is-past? [\n    set schedule butfirst schedule\n  ]\nend\n\nto-report first-schedule-time-is-past?\n  report last (first (first schedule)) <= ticks\nend\n\nto-report speed  ; dynaturtle procedure\n  report sqrt (vx ^  2 + vy ^ 2)\nend\n\nto log-data\n  ;; This is an empty procedure to be changed in Javascript for logging purposes\nend\n\n;to schedule-engines\n;  set schedule lput [[0 10] [0 0 0 1]] schedule\n;end\n; --- NETTANGO BEGIN ---\n\n; This block of code was added by the NetTango Web Builder.  If you modify this code\n; and re-import it into the NetTango Web Builder you may lose your changes or need\n; to resolve some errors manually.\n\n; If you do not plan to re-import the model into the NetTango Web Builder then you\n; can safely edit this code however you want, just like a normal NetLogo model.\n\nto schedule-engines\n  set duration 1\n  set last-tick-scheduled ifelse-value empty? schedule [ticks] [last (first (last schedule))]\n  set ticks-on (list last-tick-scheduled (last-tick-scheduled + duration))\n  set schedule lput (list ticks-on [0 0 0 0]) schedule \nend\n; --- NETTANGO END ---\n@#$#@#$#@\nGRAPHICS-WINDOW\n221\n10\n679\n469\n-1\n-1\n13.64\n1\n10\n1\n1\n1\n0\n0\n0\n1\n-16\n16\n-16\n16\n1\n1\n1\nseconds\n30\n\nBUTTON\n0\n100\n95\n133\nNIL\nsetup\nNIL\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n1\n\nBUTTON\n100\n100\n209\n133\nNIL\ngo\nT\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nBUTTON\n0\n150\n94\n183\nNIL\nclear-drawing\nNIL\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n1\n\nSWITCH\n100\n150\n211\n183\ndraw-path?\ndraw-path?\n0\n1\n-1000\n\nMONITOR\n0\n188\n95\n233\nspeed\n[speed] of dynaturtle\n3\n1\n11\n\nMONITOR\n100\n189\n210\n234\ndirection (angle)\ndyna-direction\n2\n1\n11\n\nMONITOR\n35\n240\n94\n285\nvx\n[vx] of dynaturtle\n3\n1\n11\n\nMONITOR\n100\n240\n155\n285\nvy\n[vy] of dynaturtle\n3\n1\n11\n\nCHOOSER\n0\n50\n144\n95\nmaze\nmaze\n\"random target 1D\" \"random target 2D\" \"no target\"\n0\n\nBUTTON\n150\n50\n210\n95\nruler\nshow-ruler\nT\n1\nT\nOBSERVER\nNIL\nNIL\nNIL\nNIL\n0\n\nPLOT\n0\n287\n200\n467\nVelocity\nticks\npatches / tick\n0\n10\n0\n1\ntrue\ntrue\n\"\" \"\"\nPENS\n\"Vx\" 1 0 -16777216 true \"\" \"plot [vx] of dynaturtle\"\n\"Vy\" 1 0 -13345367 true \"\" \"Plot [vy] of dynaturtle\"\n\nTEXTBOX\n0\n133\n209\n161\n--------------------------------\n11\n0\n1\n\nTEXTBOX\n5\n20\n155\n38\nSpaceship's mass = 10kg\n11\n0\n1\n@#$#@#$#@\n## WHAT IS IT?\n\n(a general understanding of what the model is trying to show or explain)\n\n## HOW IT WORKS\n\n(what rules the agents use to create the overall behavior of the model)\n\n## HOW TO USE IT\n\n(how to use the model, including a description of each of the items in the Interface tab)\n\n## THINGS TO NOTICE\n\n(suggested things for the user to notice while running the model)\n\n## THINGS TO TRY\n\n(suggested things for the user to try to do (move sliders, switches, etc.) with the model)\n\n## EXTENDING THE MODEL\n\n(suggested things to add or change in the Code tab to make the model more complicated, detailed, accurate, etc.)\n\n## NETLOGO FEATURES\n\n(interesting or unusual features of NetLogo that the model uses, particularly in the Code tab; or where workarounds were needed for missing features)\n\n## RELATED MODELS\n\n(models in the NetLogo Models Library and elsewhere which are of related interest)\n\n## CREDITS AND REFERENCES\n\n(a reference to the model's URL on the web if it has one, as well as any other necessary credits, citations, and links)\n@#$#@#$#@\ndefault\ntrue\n0\nPolygon -7500403 true true 150 5 40 250 150 205 260 250\n\nairplane\ntrue\n0\nPolygon -7500403 true true 150 0 135 15 120 60 120 105 15 165 15 195 120 180 135 240 105 270 120 285 150 270 180 285 210 270 165 240 180 180 285 195 285 165 180 105 180 60 165 15\n\narrow\ntrue\n0\nPolygon -7500403 true true 150 0 0 150 105 150 105 293 195 293 195 150 300 150\n\nbox\nfalse\n0\nPolygon -7500403 true true 150 285 285 225 285 75 150 135\nPolygon -7500403 true true 150 135 15 75 150 15 285 75\nPolygon -7500403 true true 15 75 15 225 150 285 150 135\nLine -16777216 false 150 285 150 135\nLine -16777216 false 150 135 15 75\nLine -16777216 false 150 135 285 75\n\nbug\ntrue\n0\nCircle -7500403 true true 96 182 108\nCircle -7500403 true true 110 127 80\nCircle -7500403 true true 110 75 80\nLine -7500403 true 150 100 80 30\nLine -7500403 true 150 100 220 30\n\nbutterfly\ntrue\n0\nPolygon -7500403 true true 150 165 209 199 225 225 225 255 195 270 165 255 150 240\nPolygon -7500403 true true 150 165 89 198 75 225 75 255 105 270 135 255 150 240\nPolygon -7500403 true true 139 148 100 105 55 90 25 90 10 105 10 135 25 180 40 195 85 194 139 163\nPolygon -7500403 true true 162 150 200 105 245 90 275 90 290 105 290 135 275 180 260 195 215 195 162 165\nPolygon -16777216 true false 150 255 135 225 120 150 135 120 150 105 165 120 180 150 165 225\nCircle -16777216 true false 135 90 30\nLine -16777216 false 150 105 195 60\nLine -16777216 false 150 105 105 60\n\ncar\nfalse\n0\nPolygon -7500403 true true 300 180 279 164 261 144 240 135 226 132 213 106 203 84 185 63 159 50 135 50 75 60 0 150 0 165 0 225 300 225 300 180\nCircle -16777216 true false 180 180 90\nCircle -16777216 true false 30 180 90\nPolygon -16777216 true false 162 80 132 78 134 135 209 135 194 105 189 96 180 89\nCircle -7500403 true true 47 195 58\nCircle -7500403 true true 195 195 58\n\ncircle\nfalse\n0\nCircle -7500403 true true 0 0 300\n\ncircle 2\nfalse\n0\nCircle -7500403 true true 0 0 300\nCircle -16777216 true false 30 30 240\n\ncow\nfalse\n0\nPolygon -7500403 true true 200 193 197 249 179 249 177 196 166 187 140 189 93 191 78 179 72 211 49 209 48 181 37 149 25 120 25 89 45 72 103 84 179 75 198 76 252 64 272 81 293 103 285 121 255 121 242 118 224 167\nPolygon -7500403 true true 73 210 86 251 62 249 48 208\nPolygon -7500403 true true 25 114 16 195 9 204 23 213 25 200 39 123\n\ncylinder\nfalse\n0\nCircle -7500403 true true 0 0 300\n\ndot\nfalse\n0\nCircle -7500403 true true 90 90 120\n\nface happy\nfalse\n0\nCircle -7500403 true true 8 8 285\nCircle -16777216 true false 60 75 60\nCircle -16777216 true false 180 75 60\nPolygon -16777216 true false 150 255 90 239 62 213 47 191 67 179 90 203 109 218 150 225 192 218 210 203 227 181 251 194 236 217 212 240\n\nface neutral\nfalse\n0\nCircle -7500403 true true 8 7 285\nCircle -16777216 true false 60 75 60\nCircle -16777216 true false 180 75 60\nRectangle -16777216 true false 60 195 240 225\n\nface sad\nfalse\n0\nCircle -7500403 true true 8 8 285\nCircle -16777216 true false 60 75 60\nCircle -16777216 true false 180 75 60\nPolygon -16777216 true false 150 168 90 184 62 210 47 232 67 244 90 220 109 205 150 198 192 205 210 220 227 242 251 229 236 206 212 183\n\nfire\ntrue\n0\nPolygon -7500403 true true 151 286 134 282 103 282 59 248 40 210 32 157 37 108 68 146 71 109 83 72 111 27 127 55 148 11 167 41 180 112 195 57 217 91 226 126 227 203 256 156 256 201 238 263 213 278 183 281\nPolygon -955883 true false 126 284 91 251 85 212 91 168 103 132 118 153 125 181 135 141 151 96 185 161 195 203 193 253 164 286\nPolygon -2674135 true false 155 284 172 268 172 243 162 224 148 201 130 233 131 260 135 282\n\nfish\nfalse\n0\nPolygon -1 true false 44 131 21 87 15 86 0 120 15 150 0 180 13 214 20 212 45 166\nPolygon -1 true false 135 195 119 235 95 218 76 210 46 204 60 165\nPolygon -1 true false 75 45 83 77 71 103 86 114 166 78 135 60\nPolygon -7500403 true true 30 136 151 77 226 81 280 119 292 146 292 160 287 170 270 195 195 210 151 212 30 166\nCircle -16777216 true false 215 106 30\n\nflag\nfalse\n0\nRectangle -7500403 true true 60 15 75 300\nPolygon -7500403 true true 90 150 270 90 90 30\nLine -7500403 true 75 135 90 135\nLine -7500403 true 75 45 90 45\n\nflower\nfalse\n0\nPolygon -10899396 true false 135 120 165 165 180 210 180 240 150 300 165 300 195 240 195 195 165 135\nCircle -7500403 true true 85 132 38\nCircle -7500403 true true 130 147 38\nCircle -7500403 true true 192 85 38\nCircle -7500403 true true 85 40 38\nCircle -7500403 true true 177 40 38\nCircle -7500403 true true 177 132 38\nCircle -7500403 true true 70 85 38\nCircle -7500403 true true 130 25 38\nCircle -7500403 true true 96 51 108\nCircle -16777216 true false 113 68 74\nPolygon -10899396 true false 189 233 219 188 249 173 279 188 234 218\nPolygon -10899396 true false 180 255 150 210 105 210 75 240 135 240\n\nhouse\nfalse\n0\nRectangle -7500403 true true 45 120 255 285\nRectangle -16777216 true false 120 210 180 285\nPolygon -7500403 true true 15 120 150 15 285 120\nLine -16777216 false 30 120 270 120\n\nleaf\nfalse\n0\nPolygon -7500403 true true 150 210 135 195 120 210 60 210 30 195 60 180 60 165 15 135 30 120 15 105 40 104 45 90 60 90 90 105 105 120 120 120 105 60 120 60 135 30 150 15 165 30 180 60 195 60 180 120 195 120 210 105 240 90 255 90 263 104 285 105 270 120 285 135 240 165 240 180 270 195 240 210 180 210 165 195\nPolygon -7500403 true true 135 195 135 240 120 255 105 255 105 285 135 285 165 240 165 195\n\nline\ntrue\n0\nLine -7500403 true 150 0 150 300\n\nline half\ntrue\n0\nLine -7500403 true 150 0 150 150\n\npentagon\nfalse\n0\nPolygon -7500403 true true 150 15 15 120 60 285 240 285 285 120\n\nperson\nfalse\n0\nCircle -7500403 true true 110 5 80\nPolygon -7500403 true true 105 90 120 195 90 285 105 300 135 300 150 225 165 300 195 300 210 285 180 195 195 90\nRectangle -7500403 true true 127 79 172 94\nPolygon -7500403 true true 195 90 240 150 225 180 165 105\nPolygon -7500403 true true 105 90 60 150 75 180 135 105\n\nplant\nfalse\n0\nRectangle -7500403 true true 135 90 165 300\nPolygon -7500403 true true 135 255 90 210 45 195 75 255 135 285\nPolygon -7500403 true true 165 255 210 210 255 195 225 255 165 285\nPolygon -7500403 true true 135 180 90 135 45 120 75 180 135 210\nPolygon -7500403 true true 165 180 165 210 225 180 255 120 210 135\nPolygon -7500403 true true 135 105 90 60 45 45 75 105 135 135\nPolygon -7500403 true true 165 105 165 135 225 105 255 45 210 60\nPolygon -7500403 true true 135 90 120 45 150 15 180 45 165 90\n\nsheep\nfalse\n15\nCircle -1 true true 203 65 88\nCircle -1 true true 70 65 162\nCircle -1 true true 150 105 120\nPolygon -7500403 true false 218 120 240 165 255 165 278 120\nCircle -7500403 true false 214 72 67\nRectangle -1 true true 164 223 179 298\nPolygon -1 true true 45 285 30 285 30 240 15 195 45 210\nCircle -1 true true 3 83 150\nRectangle -1 true true 65 221 80 296\nPolygon -1 true true 195 285 210 285 210 240 240 210 195 210\nPolygon -7500403 true false 276 85 285 105 302 99 294 83\nPolygon -7500403 true false 219 85 210 105 193 99 201 83\n\nsquare\nfalse\n0\nRectangle -7500403 true true 30 30 270 270\n\nsquare 2\nfalse\n0\nRectangle -7500403 true true 30 30 270 270\nRectangle -16777216 true false 60 60 240 240\n\nstar\nfalse\n0\nPolygon -7500403 true true 151 1 185 108 298 108 207 175 242 282 151 216 59 282 94 175 3 108 116 108\n\ntarget\nfalse\n0\nCircle -7500403 true true 0 0 300\nCircle -16777216 true false 30 30 240\nCircle -7500403 true true 60 60 180\nCircle -16777216 true false 90 90 120\nCircle -7500403 true true 120 120 60\n\ntree\nfalse\n0\nCircle -7500403 true true 118 3 94\nRectangle -6459832 true false 120 195 180 300\nCircle -7500403 true true 65 21 108\nCircle -7500403 true true 116 41 127\nCircle -7500403 true true 45 90 120\nCircle -7500403 true true 104 74 152\n\ntriangle\nfalse\n0\nPolygon -7500403 true true 150 30 15 255 285 255\n\ntriangle 2\nfalse\n0\nPolygon -7500403 true true 150 30 15 255 285 255\nPolygon -16777216 true false 151 99 225 223 75 224\n\ntruck\nfalse\n0\nRectangle -7500403 true true 4 45 195 187\nPolygon -7500403 true true 296 193 296 150 259 134 244 104 208 104 207 194\nRectangle -1 true false 195 60 195 105\nPolygon -16777216 true false 238 112 252 141 219 141 218 112\nCircle -16777216 true false 234 174 42\nRectangle -7500403 true true 181 185 214 194\nCircle -16777216 true false 144 174 42\nCircle -16777216 true false 24 174 42\nCircle -7500403 false true 24 174 42\nCircle -7500403 false true 144 174 42\nCircle -7500403 false true 234 174 42\n\nturtle\ntrue\n0\nPolygon -10899396 true false 215 204 240 233 246 254 228 266 215 252 193 210\nPolygon -10899396 true false 195 90 225 75 245 75 260 89 269 108 261 124 240 105 225 105 210 105\nPolygon -10899396 true false 105 90 75 75 55 75 40 89 31 108 39 124 60 105 75 105 90 105\nPolygon -10899396 true false 132 85 134 64 107 51 108 17 150 2 192 18 192 52 169 65 172 87\nPolygon -10899396 true false 85 204 60 233 54 254 72 266 85 252 107 210\nPolygon -7500403 true true 119 75 179 75 209 101 224 135 220 225 175 261 128 261 81 224 74 135 88 99\n\nufo top\nfalse\n0\nCircle -1 true false 15 15 270\nCircle -16777216 false false 15 15 270\nCircle -7500403 true true 75 75 150\nCircle -16777216 false false 75 75 150\nCircle -7500403 true true 60 60 30\nCircle -7500403 true true 135 30 30\nCircle -7500403 true true 210 60 30\nCircle -7500403 true true 240 135 30\nCircle -7500403 true true 210 210 30\nCircle -7500403 true true 135 240 30\nCircle -7500403 true true 60 210 30\nCircle -7500403 true true 30 135 30\nCircle -16777216 false false 30 135 30\nCircle -16777216 false false 60 210 30\nCircle -16777216 false false 135 240 30\nCircle -16777216 false false 210 210 30\nCircle -16777216 false false 240 135 30\nCircle -16777216 false false 210 60 30\nCircle -16777216 false false 135 30 30\nCircle -16777216 false false 60 60 30\n\nwheel\nfalse\n0\nCircle -7500403 true true 3 3 294\nCircle -16777216 true false 30 30 240\nLine -7500403 true 150 285 150 15\nLine -7500403 true 15 150 285 150\nCircle -7500403 true true 120 120 60\nLine -7500403 true 216 40 79 269\nLine -7500403 true 40 84 269 221\nLine -7500403 true 40 216 269 79\nLine -7500403 true 84 40 221 269\n\nwolf\nfalse\n0\nPolygon -16777216 true false 253 133 245 131 245 133\nPolygon -7500403 true true 2 194 13 197 30 191 38 193 38 205 20 226 20 257 27 265 38 266 40 260 31 253 31 230 60 206 68 198 75 209 66 228 65 243 82 261 84 268 100 267 103 261 77 239 79 231 100 207 98 196 119 201 143 202 160 195 166 210 172 213 173 238 167 251 160 248 154 265 169 264 178 247 186 240 198 260 200 271 217 271 219 262 207 258 195 230 192 198 210 184 227 164 242 144 259 145 284 151 277 141 293 140 299 134 297 127 273 119 270 105\nPolygon -7500403 true true -1 195 14 180 36 166 40 153 53 140 82 131 134 133 159 126 188 115 227 108 236 102 238 98 268 86 269 92 281 87 269 103 269 113\n\nx\nfalse\n0\nPolygon -7500403 true true 270 75 225 30 30 225 75 270\nPolygon -7500403 true true 30 75 75 30 270 225 225 270\n@#$#@#$#@\nNetLogo 6.2.2\n@#$#@#$#@\n@#$#@#$#@\n@#$#@#$#@\n@#$#@#$#@\n@#$#@#$#@\ndefault\n0\n-0.2 0 0 1\n0 1 1 0\n0.2 0 0 1\nlink direction\ntrue\n0\nLine -7500403 true 150 150 90 180\nLine -7500403 true 150 150 210 180\n@#$#@#$#@\n\n@#$#@#$#@\n","netLogoSettings":{"isVertical":true}}